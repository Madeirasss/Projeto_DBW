<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>Brainstorm</title>
    <link rel="stylesheet" href="/css/signup.css">
</head>

<body>
    <nav class="navbar navbar-expand-lg fixed-top">
        <div class="container">
            <a class="navbar-brand" href="/">
                <h3 class="logo">Brainstorm</h3>
            </a>
        </div>
    </nav>

    <main class="flex-grow-1">
        <div class="container py-5">
            <div class="row justify-content-center align-items-center min-vh-80 py-5">
                <div class="col-lg-4 col-md-6 col-12">
                    <div class="card">
                        <div class="card-body p-4 p-md-5">
                            <h3 class="card-title text-center mb-4">Sign Up</h3>
                            <form action="/signup" method="POST">
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email address</label>
                                    <input type="email" class="form-control" id="email" name="email" placeholder="name@example.com" required>
                                    <div class="invalid-feedback">Email already registered</div>
                                </div>
                                <div class="mb-3">
                                    <label for="username" class="form-label">Username</label>
                                    <input type="text" class="form-control" id="username" name="username" placeholder="Username" required>
                                    <div class="invalid-feedback">Username already taken</div>
                                </div>
                                <div class="mb-4">
                                    <label for="password" class="form-label">Password</label>
                                    <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
                                
                                    <div class="invalid-feedback">Password must be 8+ characters with special characters</div>
                                </div>
                                <div class="d-grid mb-3">
                                    <button type="submit" class="btn btn-primary">Sign Up</button>
                                </div>
                                <div class="text-center">
                                    <p class="text-white">Already have an account? <a href="/login" style="color: var(--primary-color);">Login</a></p>
                                </div>
                            </form>
                            <div id="form-message" class="mt-3 text-center"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <%- include('../views/partials/footer'); %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
    
    <script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('form');
    const emailInput = document.getElementById('email');
    const usernameInput = document.getElementById('username');
    const passwordInput = document.getElementById('password');
    const messageDiv = document.getElementById('form-message');

    // Real-time validation
    emailInput.addEventListener('blur', () => checkField('email'));
    usernameInput.addEventListener('blur', () => checkField('username'));
    passwordInput.addEventListener('input', validatePassword);

    function validatePassword() {
        const password = passwordInput.value;
        const hasMinLength = password.length >= 8;
        const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
        
        if (password && (!hasMinLength || !hasSpecialChar)) {
            passwordInput.classList.add('is-invalid');
            return false;
        } else {
            passwordInput.classList.remove('is-invalid');
            return true;
        }
    }

    async function checkField(field) {
        const value = field === 'email' ? emailInput.value : usernameInput.value;
        const inputElement = field === 'email' ? emailInput : usernameInput;
        
        if (!value) return;
        
        try {
            const response = await fetch('/check-username', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ [field]: value })
            });
            
            const data = await response.json();
            
            if (data.exists) {
                inputElement.classList.add('is-invalid');
                // Add specific error message
                const feedbackElement = inputElement.nextElementSibling;
                if (feedbackElement && feedbackElement.classList.contains('invalid-feedback')) {
                    feedbackElement.textContent = `${field === 'email' ? 'Email' : 'Username'} already exists`;
                }
                return false;
            } else {
                inputElement.classList.remove('is-invalid');
                return true;
            }
        } catch (error) {
            console.error(`Error checking ${field}:`, error);
            return false;
        }
    }

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const isEmailValid = await checkField('email');
        const isUsernameValid = await checkField('username');
        const isPasswordValid = validatePassword();
        
        if (!isEmailValid || !isUsernameValid || !isPasswordValid) {
            messageDiv.innerHTML = '<div class="alert alert-danger">Please fix the errors in the form.</div>';
            return;
        }
        
        const formData = {
            email: emailInput.value,
            username: usernameInput.value,
            password: passwordInput.value
        };
        
        try {
            const response = await fetch('/signup', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            });
            
            if (response.ok) {
                form.style.display = 'none';
                messageDiv.innerHTML = `
                    <div class="alert alert-success">
                        Account created successfully!
                        <div class="mt-3">
                            <a href="/login" class="btn btn-success">Go to Login</a>
                        </div>
                    </div>
                `;
            } else {
                const error = await response.text();
                messageDiv.innerHTML = `<div class="alert alert-danger">${error}</div>`;
            }
        } catch (error) {
            messageDiv.innerHTML = `<div class="alert alert-danger">Error: ${error.message}</div>`;
        }
    });
});
    </script>
</body>
</html>