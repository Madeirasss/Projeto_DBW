import mongoose from "mongoose";
import passportLocalMongoose from "passport-local-mongoose";

// Define the schema for the User collection
const userSchema = mongoose.Schema({
    // User's email (must be unique and required)
    email: {
        type: String,
        required: true,
        unique: true,
    },
    // User's username (must be unique and required)
    username: {
        type: String,
        required: true,
        unique: true,
    },
    // Path to the user's profile picture (default avatar if not set)
    profilePicture: {
        type: String,
        default: "/images/avatars/avatar1.png", // Default avatar
    },
    // Date when the user account was created
    createdAt: {
        type: Date,
        default: Date.now,
    },
    // Array to store the user's game history
    gameHistory: [
        {
            date: { type: Date, default: Date.now }, // Date of the game
            roomCode: String,                        // Room code where the game was played
            prompt: String,                          // Prompt or question used in the game
            generatedText: String,                   // Text generated by the AI for this game
            upvotes: Number,                         // Number of upvotes received
            downvotes: Number                        // Number of downvotes received
        }
    ]
});

// Add passport-local-mongoose plugin for authentication methods
userSchema.plugin(passportLocalMongoose);

// Export the User model
export default mongoose.model("User", userSchema);